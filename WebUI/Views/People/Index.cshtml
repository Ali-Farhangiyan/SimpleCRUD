@using Application.Services
@*@model IEnumerable<Application.Dto.PersonDto>*@
@model PaginatedList<Application.Dto.PersonDto>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find By Name: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Index">Back To Full List</a>
        </p>
    </div>
</form>
<div class="dropdown">
      <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
        Sorting
      </button>
      <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="">Id</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@ViewData["AgeSorting"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Age</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@ViewData["FirstNameSorting"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">FirstName</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@ViewData["LastNameSorting"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">LastName</a></li>
      </ul>
</div>
<br />
<br />
<table class="table">
    <thead>
        <tr>
@*            <th>
                
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th></th>*@
            <th>Id</th>
            <th>Age</th>
            <th>FirstName</th>
            <th>LastName</th>
            <th>Email</th>
            <th>PhoneNumber</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit","People", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details","People", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete","People", new { id=item.Id }) 
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.PageIndex - 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-primary @prevDisabled">Previous</a>

<a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.PageIndex + 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-primary @nextDisabled">Next</a>